/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.core.MatOfPoint;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;

/**
 *
 * @author Yogha Pradana
 */
public class WindowTuning extends javax.swing.JFrame {

    JFileChooser fc;
    Mat img_awal, img_hsv, h, s, v, mask, blur, canny, hirarki, dw;
    ArrayList<Mat> hsv, hsv_thres,data;
    List<MatOfPoint> kontur;
    boolean opened = false;
    double scale;
    ArrayList<Gambar>dataImage;
    Gambar data_image[], xx;
    int component, image_index;
    String val;
    Extend x;

    /**
     * Creates new form MainWindow
     */
    public WindowTuning() {
        initComponents();

        img_awal = new Mat();
        h = new Mat();
        s = new Mat();
        v = new Mat();
        mask = new Mat();
        blur = new Mat();
        canny = new Mat();
        hirarki = new Mat();
        kontur = new ArrayList<>();
        hsv=new ArrayList<>();
        hsv_thres=new ArrayList<>();
        data=new ArrayList<>();
        dataImage=new ArrayList<>();
        fc = new JFileChooser(System.getProperty("user.dir"));
        x = new Extend();

        data_image = new Gambar[100];
        for (int i = 0; i < data_image.length; i++) {
            data_image[i] = new Gambar();
        }
        xx = new Gambar();
        //Mata.isikosong(data_mata);
        IO parser = new IO(data_image.length);
        try {
            parser.processLineByLine("database.txt");
        } catch (IOException ex) {
            IO.tulis_baru();
        }
        data_image = parser.ret();
        
        DefaultListModel listModel;
        listModel = new DefaultListModel();
        for (int i = 0; i < data_image.length; i++) {
            dataImage.add(data_image[i]);
            listModel.addElement(data_image[i].file_name);
        }
        listImage.setModel(listModel);
        //x =new Extend();
        // x.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listImage = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listObject = new javax.swing.JList<>();
        jLabel6 = new javax.swing.JLabel();
        labelMomentVal = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        label_dataset_image = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        label_dataset_component = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btn_open = new javax.swing.JButton();
        lbl_img_src = new javax.swing.JLabel();
        lbl_img_h = new javax.swing.JLabel();
        lbl_img_s = new javax.swing.JLabel();
        lbl_img_v = new javax.swing.JLabel();
        slider_h = new javax.swing.JSlider();
        slider_s = new javax.swing.JSlider();
        slider_v = new javax.swing.JSlider();
        lbl_img_h_thres = new javax.swing.JLabel();
        lbl_img_s_thres = new javax.swing.JLabel();
        lbl_img_v_thres = new javax.swing.JLabel();
        lbl_h_val = new javax.swing.JLabel();
        lbl_s_val = new javax.swing.JLabel();
        lbl_v_val = new javax.swing.JLabel();
        btn_thres = new javax.swing.JButton();
        lbl_img_mask = new javax.swing.JLabel();
        lbl_img_other = new javax.swing.JLabel();
        slider_h1 = new javax.swing.JSlider();
        lbl_h1_val = new javax.swing.JLabel();
        slider_s1 = new javax.swing.JSlider();
        lbl_s1_val = new javax.swing.JLabel();
        slider_v1 = new javax.swing.JSlider();
        lbl_v1_val = new javax.swing.JLabel();
        fieldArea = new javax.swing.JTextField();
        label_name = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        combo_type = new javax.swing.JComboBox<>();
        btn_save = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fieldOverlap = new javax.swing.JTextField();

        setTitle("program");

        listImage.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listImage.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listImageValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listImage);

        jLabel4.setText("Image");

        jLabel5.setText("Detected Object");

        listObject.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listObjectValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(listObject);

        jLabel6.setText("Moment Value : ");

        labelMomentVal.setText("0");

        jLabel8.setText("Image");

        jLabel10.setText("Object");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(100, 100, 100)
                        .addComponent(jLabel5))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(labelMomentVal, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(190, 190, 190)
                        .addComponent(jLabel10))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(label_dataset_image, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(label_dataset_component, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(354, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(labelMomentVal))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                        .addComponent(jScrollPane2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_dataset_image, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label_dataset_component, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(293, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Dataset", jPanel2);

        btn_open.setText("OPEN");
        btn_open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_openActionPerformed(evt);
            }
        });

        lbl_img_src.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_img_src.setToolTipText("");
        lbl_img_src.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lbl_img_src.setBorder(javax.swing.BorderFactory.createTitledBorder("Source"));

        lbl_img_h.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_img_h.setToolTipText("");
        lbl_img_h.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lbl_img_h.setBorder(javax.swing.BorderFactory.createTitledBorder("Channel H"));

        lbl_img_s.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_img_s.setToolTipText("");
        lbl_img_s.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lbl_img_s.setBorder(javax.swing.BorderFactory.createTitledBorder("Channel S"));

        lbl_img_v.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_img_v.setToolTipText("");
        lbl_img_v.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lbl_img_v.setBorder(javax.swing.BorderFactory.createTitledBorder("Channel V"));

        slider_h.setMaximum(180);
        slider_h.setValue(0);
        slider_h.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                slider_hMouseDragged(evt);
            }
        });
        slider_h.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                slider_hMouseReleased(evt);
            }
        });

        slider_s.setMaximum(255);
        slider_s.setValue(0);
        slider_s.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                slider_sMouseDragged(evt);
            }
        });
        slider_s.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                slider_sMouseReleased(evt);
            }
        });

        slider_v.setMaximum(255);
        slider_v.setValue(0);
        slider_v.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                slider_vMouseDragged(evt);
            }
        });
        slider_v.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                slider_vMouseReleased(evt);
            }
        });

        lbl_img_h_thres.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_img_h_thres.setToolTipText("");
        lbl_img_h_thres.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lbl_img_h_thres.setBorder(javax.swing.BorderFactory.createTitledBorder("Thres H"));

        lbl_img_s_thres.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_img_s_thres.setToolTipText("");
        lbl_img_s_thres.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lbl_img_s_thres.setBorder(javax.swing.BorderFactory.createTitledBorder("Thres S"));

        lbl_img_v_thres.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_img_v_thres.setToolTipText("");
        lbl_img_v_thres.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lbl_img_v_thres.setBorder(javax.swing.BorderFactory.createTitledBorder("Thres V"));

        lbl_h_val.setText("0");

        lbl_s_val.setText("0");

        lbl_v_val.setText("0");

        btn_thres.setText("Threshold");
        btn_thres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_thresActionPerformed(evt);
            }
        });

        lbl_img_mask.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_img_mask.setToolTipText("");
        lbl_img_mask.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lbl_img_mask.setBorder(javax.swing.BorderFactory.createTitledBorder("Mask"));

        lbl_img_other.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_img_other.setToolTipText("");
        lbl_img_other.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lbl_img_other.setBorder(javax.swing.BorderFactory.createTitledBorder("Result"));
        lbl_img_other.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_img_otherMouseClicked(evt);
            }
        });

        slider_h1.setMaximum(180);
        slider_h1.setValue(180);
        slider_h1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                slider_h1MouseDragged(evt);
            }
        });
        slider_h1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                slider_h1MouseReleased(evt);
            }
        });

        lbl_h1_val.setText("0");

        slider_s1.setMaximum(255);
        slider_s1.setValue(255);
        slider_s1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                slider_s1MouseDragged(evt);
            }
        });
        slider_s1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                slider_s1MouseReleased(evt);
            }
        });

        lbl_s1_val.setText("0");

        slider_v1.setMaximum(255);
        slider_v1.setValue(255);
        slider_v1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                slider_v1MouseDragged(evt);
            }
        });
        slider_v1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                slider_v1MouseReleased(evt);
            }
        });

        lbl_v1_val.setText("0");

        fieldArea.setText("0");

        label_name.setText("File Name : ");

        jLabel2.setText("Image Type :");

        combo_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ALL", "AML" }));

        btn_save.setText("SAVE");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        jLabel1.setText("Limit :");

        jLabel3.setText("Overlap :");

        fieldOverlap.setText("80");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lbl_img_src, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                        .addComponent(label_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_open, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(combo_type, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btn_thres, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_save, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(slider_h1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_h1_val, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(178, 178, 178)
                        .addComponent(lbl_s1_val, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lbl_img_h_thres, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbl_img_s_thres, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl_img_v_thres, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_img_h, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(slider_h, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lbl_h_val, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(slider_s, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lbl_s_val, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lbl_img_s, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(slider_s1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbl_img_v, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(slider_v, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(slider_v1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lbl_v1_val, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lbl_v_val, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addContainerGap(148, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbl_img_mask, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fieldArea, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(fieldOverlap, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(107, 107, 107)
                        .addComponent(lbl_img_other, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_img_h, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_img_s, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_img_v, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_img_src, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lbl_h_val)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(slider_v, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(slider_s, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_s_val, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addComponent(lbl_v_val))
                            .addComponent(slider_h, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(btn_open)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lbl_h1_val)
                                            .addComponent(jLabel2)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(slider_s1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(4, 4, 4)
                                        .addComponent(lbl_s1_val))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addComponent(lbl_v1_val)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(combo_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(slider_v1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_img_h_thres, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_img_s_thres, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_img_v_thres, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_save)))
                    .addComponent(slider_h1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_name))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_thres)
                        .addGap(125, 125, 125))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(4, 4, 4)
                                .addComponent(fieldArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fieldOverlap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lbl_img_mask, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_img_other, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(30, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab("Segmentation", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_openActionPerformed
        // TODO add your handling code here:
        if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            String file_name = Process.getBaseName(fc.getSelectedFile().getName());
            System.out.println("Opened Image : " + fc.getSelectedFile().getPath());
            img_awal = Imgcodecs.imread(fc.getSelectedFile().getPath(), Imgcodecs.IMREAD_COLOR);

            img_hsv = new Mat();
            Imgproc.cvtColor(img_awal, img_hsv, Imgproc.COLOR_BGR2HSV);

            Core.split(img_hsv, hsv);

            System.out.println("HSV channel : " + hsv.size());
            System.out.println("panel height= " + lbl_img_src.getHeight());
            System.out.println("image height= " + img_awal.size().height);

            Draw.drawToLabelScaled(img_awal, lbl_img_src);

            Draw.drawToLabelScaled(hsv.get(0), lbl_img_h);
            Draw.drawToLabelScaled(hsv.get(1), lbl_img_s);
            Draw.drawToLabelScaled(hsv.get(2), lbl_img_v);

            opened = true;

            label_name.setText(Process.getBaseName("File Name : " + fc.getSelectedFile().getName()));
            int i = 0;
           
            while (i < dataImage.size()) {
                if (file_name.equals(dataImage.get(i).file_name)) {

                    slider_h.setValue(dataImage.get(i).hl);
                    slider_h1.setValue(dataImage.get(i).hh);
                    slider_s.setValue(dataImage.get(i).sl);
                    slider_s1.setValue(dataImage.get(i).sh);
                    slider_v.setValue(dataImage.get(i).vl);
                    slider_v1.setValue(dataImage.get(i).vh);
                    fieldArea.setText(dataImage.get(i).limit_area + "");
                    component = dataImage.get(i).component;
                    val = dataImage.get(i).componentValue;

                    h = Process.hsvThres(lbl_h_val, lbl_h1_val, slider_h, slider_h1, img_hsv, lbl_img_h_thres,0);
                    s = Process.hsvThres(lbl_s_val, lbl_s1_val, slider_s, slider_s1, img_hsv, lbl_img_s_thres,1);
                    v = Process.hsvThres(lbl_v_val, lbl_v1_val, slider_v, slider_v1, img_hsv, lbl_img_v_thres,2);

                    thres();
                    //find_contour();
                    if (dataImage.get(i).type.equals("AML")) {
                        combo_type.setSelectedIndex(1);
                    } else {
                        combo_type.setSelectedIndex(0);
                    }

                    break;
                } else {
                    i++;
                }
            }
            if(i==dataImage.size()){
                slider_h.setValue(0);
                    slider_h1.setValue(180);
                    slider_s.setValue(0);
                    slider_s1.setValue(255);
                    slider_v.setValue(0);
                    slider_v1.setValue(255);
                    fieldArea.setText(10+ "");
                    component = 0;
                    val = "";

                    h = Process.hsvThres(lbl_h_val, lbl_h1_val, slider_h, slider_h1, img_hsv, lbl_img_h_thres,0);
                    s = Process.hsvThres(lbl_s_val, lbl_s1_val, slider_s, slider_s1, img_hsv, lbl_img_s_thres,1);
                    v = Process.hsvThres(lbl_v_val, lbl_v1_val, slider_v, slider_v1, img_hsv, lbl_img_v_thres,2);

                    thres();
            }

            //drawtoLabel(img_awal, pnl_open);
        }
    }//GEN-LAST:event_btn_openActionPerformed

    private void refreshDir(String path) {
        File f = new File(path);
        if (!f.exists() && !f.isDirectory()) {
            System.out.println("Direktori belum ada, membuat baru");
            f.mkdirs();
        } else {
            File[] files = f.listFiles();

            // delete each file from the directory
            System.out.println("Direktori sudah ada, refresh semua isi");
            for (File file : files) {
                System.out.println(file + " deleted.");
                file.delete();
            }
        }
    }
    
    private void thres(){
        mask=Process.getMask(h, s, v);
        Draw.drawToLabelScaled(mask, lbl_img_mask);
        
        int pic_area = img_awal.width() * img_awal.height();
        double limit_area = (Integer.parseInt(fieldArea.getText()) / 1000.0) * pic_area;
        System.out.println("limit area :" + limit_area + ", pic area : " + pic_area);

        double overlap = (Integer.parseInt(fieldOverlap.getText())) / 100.0;
        System.out.println("overlap :" + overlap);
        
        data=Process.cropROI(Process.findROI( mask,limit_area, overlap),img_awal);
        
        Draw.drawToLabelScaled(data.get(data.size()-1),lbl_img_other );
        x.drawToLabelScaled(data.get(data.size()-1));
    }

    private void slider_hMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slider_hMouseReleased
        // TODO add your handling code here:
        if (opened)
            h = Process.hsvThres(lbl_h_val, lbl_h1_val, slider_h, slider_h1, img_hsv, lbl_img_h_thres,0);
    }//GEN-LAST:event_slider_hMouseReleased

    private void slider_hMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slider_hMouseDragged
        // TODO add your handling code here:
        if (opened)
            h = Process.hsvThres(lbl_h_val, lbl_h1_val, slider_h, slider_h1, img_hsv, lbl_img_h_thres,0);
    }//GEN-LAST:event_slider_hMouseDragged

    private void slider_sMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slider_sMouseReleased
        // TODO add your handling code here:
        if (opened)
            s = Process.hsvThres(lbl_s_val, lbl_s1_val, slider_s, slider_s1, img_hsv, lbl_img_s_thres,1);
    }//GEN-LAST:event_slider_sMouseReleased

    private void slider_sMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slider_sMouseDragged
        // TODO add your handling code here:
        if (opened)
            s = Process.hsvThres(lbl_s_val, lbl_s1_val, slider_s, slider_s1, img_hsv, lbl_img_s_thres,1);
    }//GEN-LAST:event_slider_sMouseDragged

    private void slider_vMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slider_vMouseDragged
        // TODO add your handling code here:
        if (opened)
            v = Process.hsvThres(lbl_v_val, lbl_v1_val, slider_v, slider_v1, img_hsv, lbl_img_v_thres,2);
    }//GEN-LAST:event_slider_vMouseDragged

    private void slider_vMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slider_vMouseReleased
        // TODO add your handling code here:
        if (opened)
            v = Process.hsvThres(lbl_v_val, lbl_v1_val, slider_v, slider_v1, img_hsv, lbl_img_v_thres,2);
    }//GEN-LAST:event_slider_vMouseReleased

    private void btn_thresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_thresActionPerformed
        // TODO add your handling code here:
        if(opened)
            thres();
    }//GEN-LAST:event_btn_thresActionPerformed

    private void slider_h1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slider_h1MouseDragged
        // TODO add your handling code here:
        if (opened)
            h = Process.hsvThres(lbl_h_val, lbl_h1_val, slider_h, slider_h1, img_hsv, lbl_img_h_thres,0);
    }//GEN-LAST:event_slider_h1MouseDragged

    private void slider_h1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slider_h1MouseReleased
        // TODO add your handling code here:
        if (opened)
            h = Process.hsvThres(lbl_h_val, lbl_h1_val, slider_h, slider_h1, img_hsv, lbl_img_h_thres,0);
    }//GEN-LAST:event_slider_h1MouseReleased

    private void slider_s1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slider_s1MouseDragged
        // TODO add your handling code here:
        if (opened)
            s = Process.hsvThres(lbl_s_val, lbl_s1_val, slider_s, slider_s1, img_hsv, lbl_img_s_thres,1);
    }//GEN-LAST:event_slider_s1MouseDragged

    private void slider_s1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slider_s1MouseReleased
        // TODO add your handling code here:
        if (opened)
            s = Process.hsvThres(lbl_s_val, lbl_s1_val, slider_s, slider_s1, img_hsv, lbl_img_s_thres,1);
    }//GEN-LAST:event_slider_s1MouseReleased

    private void slider_v1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slider_v1MouseDragged
        // TODO add your handling code here:
        v = Process.hsvThres(lbl_v_val, lbl_v1_val, slider_v, slider_v1, img_hsv, lbl_img_v_thres,2);
    }//GEN-LAST:event_slider_v1MouseDragged

    private void slider_v1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slider_v1MouseReleased
        // TODO add your handling code here:
        v = Process.hsvThres(lbl_v_val, lbl_v1_val, slider_v, slider_v1, img_hsv, lbl_img_v_thres,2);
    }//GEN-LAST:event_slider_v1MouseReleased

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        // TODO add your handling code here:
        if (opened) {
            int i = 0;
            int x = 0;
            boolean notFound = true;
            String file_name = Process.getBaseName(fc.getSelectedFile().getName());
            String path = System.getProperty("user.dir") + "\\output\\" + file_name + "\\";
            System.out.println("data path: " + path);
            refreshDir(path);
            Process.saveImage(data, path);
            val=Process.findMoment(data);
            component=data.size()-1;
            while (i < dataImage.size()) {
                if (file_name.equals(dataImage.get(i).file_name)) {
                    dataImage.get(i).hl = slider_h.getValue();
                    dataImage.get(i).hh = slider_h1.getValue();
                    dataImage.get(i).sl = slider_s.getValue();
                    dataImage.get(i).sh = slider_s1.getValue();
                    dataImage.get(i).vl = slider_v.getValue();
                    dataImage.get(i).vh = slider_v1.getValue();
                    dataImage.get(i).type = combo_type.getSelectedItem() + "";
                    dataImage.get(i).limit_area = Integer.parseInt(fieldArea.getText());
                    dataImage.get(i).component = component;
                    dataImage.get(i).componentValue = val;
                    notFound = false;
                    break;
                } else {
                    i++;
                }
            }
            if (notFound) {
                dataImage.add(new Gambar(file_name,slider_h.getValue(),slider_h1.getValue(),
                            slider_s.getValue(),slider_s1.getValue(),slider_v.getValue(),
                            slider_v1.getValue(),Integer.parseInt(fieldArea.getText()),
                            component,val,combo_type.getSelectedItem() + ""));
                    
            }
            try {
                IO.tulis_database(data_image);
            } catch (IOException ex) {
                IO.tulis_baru();
            }
            
        }
    }//GEN-LAST:event_btn_saveActionPerformed

    private void lbl_img_otherMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_img_otherMouseClicked
        // TODO add your handling code here:
        if (opened) {
            x.setVisible(true);
            x.drawToLabelScaled(data.get(data.size()-1));

        }

    }//GEN-LAST:event_lbl_img_otherMouseClicked

    private void listImageValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listImageValueChanged
        // TODO add your handling code here:
        DefaultListModel listModel;
        listModel = new DefaultListModel();
        image_index = listImage.getSelectedIndex();
        String path = System.getProperty("user.dir") + "\\output\\" + data_image[image_index].file_name + "\\processed.jpg";
        System.out.println("Selected Image Path :" + path);
        System.out.println("Scale: " + scale);
        Mat display = new Mat();
        display = Imgcodecs.imread(path, Imgcodecs.IMREAD_COLOR);
        Draw.drawToLabelScaled(display, label_dataset_image);
        System.out.println("Selected list index 0" + image_index);
        for (int i = 0; i < dataImage.get(image_index).component; i++) {
            listModel.addElement(i);
        }
        listObject.setModel(listModel);
        listObject.clearSelection();
    }//GEN-LAST:event_listImageValueChanged

    private void listObjectValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listObjectValueChanged
        // TODO add your handling code here:
        int index = listObject.getSelectedIndex();
        if (index > -1) {
            String momentVal[]=dataImage.get(image_index).componentValue.split("/");
            labelMomentVal.setText(momentVal[index]);
            String path = System.getProperty("user.dir") + "\\output\\" + dataImage.get(image_index).file_name + "\\crop-" + index + ".jpg";
            System.out.println("Selected Image Path :" + path);
            System.out.println("Scale: " + scale);
            Mat display = new Mat();
            display = Imgcodecs.imread(path, Imgcodecs.IMREAD_COLOR);
            Draw.drawToLabelScaled(display, label_dataset_component);
        }
    }//GEN-LAST:event_listObjectValueChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_open;
    private javax.swing.JButton btn_save;
    private javax.swing.JButton btn_thres;
    private javax.swing.JComboBox<String> combo_type;
    private javax.swing.JTextField fieldArea;
    private javax.swing.JTextField fieldOverlap;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labelMomentVal;
    private javax.swing.JLabel label_dataset_component;
    private javax.swing.JLabel label_dataset_image;
    private javax.swing.JLabel label_name;
    private javax.swing.JLabel lbl_h1_val;
    private javax.swing.JLabel lbl_h_val;
    private javax.swing.JLabel lbl_img_h;
    private javax.swing.JLabel lbl_img_h_thres;
    private javax.swing.JLabel lbl_img_mask;
    private javax.swing.JLabel lbl_img_other;
    private javax.swing.JLabel lbl_img_s;
    private javax.swing.JLabel lbl_img_s_thres;
    private javax.swing.JLabel lbl_img_src;
    private javax.swing.JLabel lbl_img_v;
    private javax.swing.JLabel lbl_img_v_thres;
    private javax.swing.JLabel lbl_s1_val;
    private javax.swing.JLabel lbl_s_val;
    private javax.swing.JLabel lbl_v1_val;
    private javax.swing.JLabel lbl_v_val;
    private javax.swing.JList<String> listImage;
    private javax.swing.JList<String> listObject;
    private javax.swing.JSlider slider_h;
    private javax.swing.JSlider slider_h1;
    private javax.swing.JSlider slider_s;
    private javax.swing.JSlider slider_s1;
    private javax.swing.JSlider slider_v;
    private javax.swing.JSlider slider_v1;
    // End of variables declaration//GEN-END:variables
}
